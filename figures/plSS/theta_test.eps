%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.5 (http://poppler.freedesktop.org)
%%Creator: matplotlib 3.0.3, http://matplotlib.org
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 979 497
%%HiResBoundingBox: 0 0 978.41875 496.201875
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-970 -443 2000 1023] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 32 dict def
CharProcs begin
/E {
611 0 12 0 597 662 setcachedevice
q
597 169 m
551 0 l
12 0 l
12 19 l
50 21 74 28 84 39 c
94 50 99 75 99 114 c
99 550 l
99 587 93 611 83 623 c
73 634 49 641 12 643 c
12 662 l
542 662 l
546 519 l
521 519 l
513 563 500 592 482 605 c
463 617 425 624 367 624 c
236 624 l
221 624 211 621 207 617 c
203 613 201 603 201 588 c
201 368 l
352 368 l
394 368 421 374 435 386 c
449 398 459 424 465 464 c
488 464 l
488 230 l
465 230 l
459 272 449 298 436 310 c
422 321 394 327 352 327 c
201 327 l
201 84 l
201 64 208 51 222 45 c
236 39 262 37 302 37 c
338 37 l
409 37 460 45 490 63 c
520 80 546 115 569 169 c
597 169 l
f
Q
} def
/O {
722 0 34 -13 688 676 setcachedevice
q
688 331 m
688 228 657 145 597 82 c
536 18 457 -13 361 -13 c
263 -13 184 18 124 82 c
64 146 34 230 34 334 c
34 435 64 517 124 581 c
184 644 263 676 361 676 c
458 676 537 643 597 578 c
657 513 688 431 688 331 c
574 337 m
574 393 566 444 550 489 c
534 534 511 569 483 593 c
445 624 404 640 360 640 c
303 640 255 617 217 573 c
195 549 178 514 166 470 c
154 426 148 380 148 332 c
148 210 178 122 238 67 c
270 37 312 22 362 22 c
414 22 457 38 491 70 c
546 123 574 212 574 337 c
f
Q
} def
/T {
611 0 17 0 593 662 setcachedevice
q
593 492 m
569 492 l
558 546 543 581 524 597 c
504 612 468 620 415 620 c
356 620 l
356 111 l
356 73 361 48 373 38 c
384 27 410 21 452 19 c
452 0 l
160 0 l
160 19 l
202 21 228 28 238 40 c
248 51 254 79 254 123 c
254 620 l
194 620 l
140 620 103 612 84 596 c
65 580 51 546 41 492 c
17 492 l
24 662 l
586 662 l
593 492 l
f
Q
} def
/a {
444 0 37 -9 442 460 setcachedevice
q
442 66 m
442 38 l
416 6 386 -9 352 -9 c
314 -9 292 15 288 63 c
287 63 l
244 15 196 -9 142 -9 c
110 -9 85 0 66 18 c
46 36 37 61 37 94 c
37 140 60 179 107 211 c
139 232 199 259 287 292 c
287 346 l
287 376 279 398 265 413 c
251 428 232 436 209 436 c
189 436 172 431 159 421 c
145 411 139 400 139 387 c
139 381 140 374 142 367 c
144 359 145 352 145 345 c
145 335 140 325 131 317 c
122 308 111 304 99 304 c
87 304 77 308 69 317 c
60 325 56 336 56 350 c
56 382 73 408 107 430 c
138 450 176 460 222 460 c
276 460 315 445 340 415 c
352 401 359 386 363 372 c
366 358 368 335 368 304 c
368 113 l
368 69 378 47 399 47 c
412 47 426 53 442 66 c
287 127 m
287 268 l
225 246 183 224 159 202 c
136 181 125 155 125 125 c
125 99 131 80 144 67 c
156 54 173 48 194 48 c
216 48 235 53 252 64 c
266 74 275 83 280 92 c
284 100 287 112 287 127 c
f
Q
} def
/bracketleft {
333 0 88 -155 299 662 setcachedevice
q
299 -155 m
88 -155 l
88 662 l
299 662 l
299 637 l
216 637 l
198 637 185 633 177 626 c
168 618 164 606 164 589 c
164 -76 l
164 -112 181 -130 216 -130 c
299 -130 l
299 -155 l
f
Q
} def
/bracketright {
333 0 34 -155 245 662 setcachedevice
q
245 -155 m
34 -155 l
34 -130 l
122 -130 l
139 -130 151 -126 158 -119 c
165 -111 169 -100 169 -84 c
169 583 l
169 619 152 637 118 637 c
34 637 l
34 662 l
245 662 l
245 -155 l
f
Q
} def
/c {
444 0 25 -9 412 460 setcachedevice
q
398 156 m
412 147 l
383 91 356 52 330 32 c
296 4 257 -9 215 -9 c
159 -9 114 11 78 53 c
42 94 25 147 25 212 c
25 296 53 362 109 409 c
150 443 195 460 244 460 c
286 460 322 449 352 429 c
382 409 398 385 398 357 c
398 345 393 335 384 327 c
374 319 363 315 351 315 c
327 315 311 330 303 361 c
297 383 l
291 401 285 414 277 421 c
269 427 256 431 238 431 c
197 431 164 415 139 383 c
114 351 102 309 102 257 c
102 199 116 152 145 116 c
173 80 211 62 257 62 c
285 62 310 68 331 82 c
351 96 374 120 398 156 c
f
Q
} def
/e {
444 0 25 -9 424 460 setcachedevice
q
408 164 m
424 157 l
384 46 314 -9 215 -9 c
156 -9 110 11 76 52 c
42 92 25 147 25 217 c
25 288 44 346 82 392 c
120 437 170 460 232 460 c
292 460 338 437 371 391 c
390 364 401 326 405 277 c
97 277 l
99 235 103 203 109 181 c
115 159 126 136 143 114 c
171 77 208 59 254 59 c
286 59 314 67 336 83 c
358 99 382 126 408 164 c
99 309 m
303 309 l
297 351 287 380 273 398 c
259 415 237 424 205 424 c
177 424 153 414 135 394 c
116 374 104 346 99 309 c
f
Q
} def
/eight {
500 0 56 -13 445 676 setcachedevice
q
445 155 m
445 103 427 62 391 32 c
355 2 308 -13 248 -13 c
192 -13 146 2 110 32 c
74 62 56 101 56 149 c
56 184 64 214 82 239 c
99 264 134 295 186 332 c
136 373 102 406 86 432 c
70 457 62 486 62 520 c
62 567 80 605 116 633 c
152 661 199 676 256 676 c
304 676 344 662 376 634 c
408 606 424 573 424 533 c
424 496 414 467 395 445 c
376 423 341 398 290 371 c
350 331 390 295 412 264 c
434 232 445 196 445 155 c
355 533 m
355 567 345 595 326 616 c
306 637 280 648 246 648 c
212 648 185 639 165 621 c
145 603 136 579 136 549 c
136 518 145 490 165 465 c
185 440 217 415 261 389 c
295 409 319 430 333 452 c
347 474 355 501 355 533 c
271 272 m
212 312 l
182 288 162 264 150 241 c
138 218 132 190 132 158 c
132 112 143 77 166 52 c
189 26 220 14 259 14 c
291 14 318 24 338 44 c
358 64 369 91 369 124 c
369 154 361 180 346 203 c
330 225 305 248 271 272 c
f
Q
} def
/f {
333 0 20 0 383 683 setcachedevice
q
21 450 m
103 450 l
103 490 106 521 111 543 c
115 565 124 588 138 611 c
166 659 213 683 279 683 c
309 683 333 677 353 665 c
373 653 383 639 383 621 c
383 609 379 600 371 592 c
363 584 353 580 341 580 c
325 580 310 592 296 616 c
280 642 262 655 243 655 c
205 655 187 625 187 566 c
187 450 l
309 450 l
309 418 l
187 418 l
187 104 l
187 66 192 42 203 32 c
213 22 239 16 280 15 c
280 0 l
20 0 l
20 15 l
56 17 78 23 88 33 c
98 43 103 67 103 104 c
103 418 l
21 418 l
21 450 l
f
Q
} def
/five {
500 0 31 -13 438 688 setcachedevice
q
438 681 m
402 596 l
398 587 389 583 375 583 c
181 583 l
141 498 l
214 484 267 468 300 452 c
332 436 363 408 391 370 c
414 338 426 295 426 243 c
426 195 418 154 402 122 c
386 89 362 60 328 35 c
282 3 226 -13 158 -13 c
120 -13 89 -7 66 3 c
42 14 31 29 31 48 c
31 73 46 86 76 86 c
100 86 124 75 150 55 c
176 33 199 23 221 23 c
255 23 286 40 314 75 c
342 109 356 148 356 192 c
356 256 333 306 289 342 c
231 388 160 412 76 412 c
68 412 64 414 64 420 c
65 425 l
174 662 l
381 662 l
392 662 401 663 407 667 c
413 670 421 677 429 688 c
438 681 l
f
Q
} def
/four {
500 0 12 0 473 676 setcachedevice
q
473 167 m
370 167 l
370 0 l
292 0 l
292 167 l
12 167 l
12 231 l
326 676 l
370 676 l
370 231 l
473 231 l
473 167 l
292 231 m
292 574 l
52 231 l
292 231 l
f
Q
} def
/g {
500 0 28 -217 470 460 setcachedevice
q
470 388 m
387 388 l
399 359 406 331 406 304 c
406 252 388 214 354 188 c
319 162 284 149 250 149 c
242 149 230 150 212 152 c
193 154 l
179 150 166 141 153 127 c
139 113 133 101 133 91 c
133 75 159 66 211 64 c
340 58 l
376 56 406 46 428 27 c
450 8 461 -16 461 -48 c
461 -86 441 -121 401 -153 c
345 -195 279 -217 201 -217 c
153 -217 112 -207 78 -188 c
44 -169 28 -146 28 -120 c
28 -101 35 -82 50 -64 c
64 -46 90 -24 126 1 c
104 11 90 19 83 27 c
76 34 73 43 73 54 c
73 73 88 96 119 123 c
134 136 148 149 162 163 c
128 179 104 198 90 219 c
76 239 69 265 69 297 c
69 342 85 380 117 412 c
149 444 189 460 236 460 c
262 460 289 455 316 445 c
338 437 l
357 430 375 427 393 427 c
470 427 l
470 388 l
152 338 m
152 335 l
152 287 161 248 180 218 c
199 188 224 174 255 174 c
277 174 295 182 309 198 c
322 214 329 236 329 264 c
329 308 319 348 299 385 c
282 416 258 432 226 432 c
202 432 184 423 171 407 c
158 390 152 367 152 338 c
433 -63 m
433 -44 423 -31 405 -24 c
387 -17 355 -14 309 -14 c
243 -14 189 -9 147 -1 c
127 -25 113 -42 107 -53 c
101 -64 98 -75 98 -87 c
98 -109 111 -126 137 -140 c
163 -153 199 -160 243 -160 c
299 -160 345 -151 380 -133 c
415 -115 433 -92 433 -63 c
f
Q
} def
/h {
500 0 9 0 487 683 setcachedevice
q
487 0 m
275 0 l
275 15 l
304 18 323 25 331 35 c
339 45 343 67 343 102 c
343 300 l
343 370 318 406 269 406 c
249 406 230 401 214 392 c
197 382 178 366 157 343 c
157 102 l
157 67 161 45 169 35 c
177 25 195 18 225 15 c
225 0 l
9 0 l
9 15 l
37 19 55 25 62 35 c
69 44 73 66 73 102 c
73 573 l
73 594 69 608 63 614 c
57 620 43 624 22 624 c
16 624 12 623 10 623 c
10 639 l
37 647 l
88 662 126 674 152 683 c
157 680 l
157 376 l
180 406 203 427 226 440 c
248 453 274 460 304 460 c
386 460 427 407 427 301 c
427 102 l
427 67 430 45 436 36 c
442 27 459 20 487 15 c
487 0 l
f
Q
} def
/i {
278 0 16 0 253 683 setcachedevice
q
180 632 m
180 617 175 605 165 595 c
155 585 142 581 128 581 c
114 581 102 585 92 595 c
82 605 78 617 78 632 c
78 646 83 658 93 668 c
103 678 115 683 129 683 c
143 683 155 678 165 668 c
175 658 180 646 180 632 c
253 0 m
16 0 l
16 15 l
50 17 72 23 81 33 c
90 43 95 66 95 104 c
95 331 l
95 354 92 370 88 380 c
83 389 74 394 62 394 c
46 394 32 392 20 389 c
20 405 l
175 460 l
179 456 l
179 105 l
179 67 183 44 191 34 c
199 24 220 17 253 15 c
253 0 l
f
Q
} def
/l {
278 0 19 0 257 683 setcachedevice
q
257 0 m
21 0 l
21 15 l
52 17 73 24 83 34 c
93 44 98 64 98 92 c
98 561 l
98 585 95 601 89 611 c
83 620 72 625 56 625 c
42 625 29 624 19 623 c
19 639 l
82 654 135 669 177 683 c
182 679 l
182 87 l
182 59 186 40 196 31 c
205 22 225 17 257 15 c
257 0 l
f
Q
} def
/m {
778 0 16 0 775 460 setcachedevice
q
775 0 m
557 0 l
557 15 l
585 17 602 23 610 32 c
618 41 622 60 622 90 c
622 296 l
622 336 616 364 604 382 c
592 399 573 408 545 408 c
521 408 501 403 485 394 c
469 384 453 369 438 347 c
438 95 l
438 63 442 41 452 31 c
462 21 481 15 510 15 c
510 0 l
286 0 l
286 15 l
315 17 334 21 342 29 c
350 37 354 56 354 86 c
354 297 l
354 371 332 408 289 408 c
270 408 250 403 229 395 c
208 387 193 377 183 365 c
174 355 170 349 170 348 c
170 70 l
170 48 174 34 184 27 c
193 20 211 16 238 15 c
238 0 l
16 0 l
16 15 l
44 15 62 20 72 30 c
81 40 86 59 86 88 c
86 336 l
86 360 83 377 78 387 c
72 397 63 402 51 402 c
41 402 30 400 19 398 c
19 415 l
64 427 110 442 158 460 c
166 457 l
166 383 l
168 383 l
198 414 224 435 247 445 c
270 455 295 460 321 460 c
373 460 409 432 427 376 c
479 432 533 460 590 460 c
667 460 706 400 706 280 c
706 77 l
706 55 709 39 716 31 c
722 23 733 18 749 17 c
775 15 l
775 0 l
f
Q
} def
/n {
500 0 16 0 485 460 setcachedevice
q
485 0 m
277 0 l
278 15 l
302 17 319 24 327 36 c
335 48 340 71 340 105 c
340 304 l
340 371 315 405 267 405 c
250 405 234 401 220 393 c
205 385 186 370 164 348 c
164 72 l
164 52 168 38 177 30 c
186 22 203 17 229 15 c
229 0 l
18 0 l
18 15 l
43 17 60 23 68 33 c
76 43 80 64 80 94 c
80 337 l
80 361 77 378 73 388 c
68 397 59 402 45 402 c
31 402 22 400 16 398 c
16 415 l
62 428 108 443 153 460 c
161 457 l
161 379 l
162 379 l
209 433 257 460 306 460 c
344 460 373 446 393 420 c
413 393 424 355 424 306 c
424 85 l
424 58 428 40 436 32 c
444 23 460 17 485 15 c
485 0 l
f
Q
} def
/nine {
500 0 30 -21 459 676 setcachedevice
q
59 -21 m
56 -1 l
132 11 197 43 250 95 c
303 146 340 212 360 294 c
321 256 271 237 210 237 c
156 237 112 255 79 293 c
46 330 30 379 30 440 c
30 507 49 563 89 608 c
129 653 178 676 238 676 c
301 676 353 650 395 600 c
437 546 459 478 459 394 c
459 335 448 280 428 228 c
408 176 378 133 339 97 c
297 59 257 33 218 17 c
178 1 125 -11 59 -21 c
362 355 m
362 394 l
362 563 318 648 230 648 c
198 648 174 636 157 614 c
147 600 138 580 132 554 c
125 527 122 500 122 474 c
122 414 133 367 155 332 c
177 297 207 280 245 280 c
271 280 297 286 323 299 c
349 312 362 331 362 355 c
f
Q
} def
/o {
500 0 29 -9 470 460 setcachedevice
q
470 231 m
470 161 449 103 407 58 c
365 13 311 -9 245 -9 c
183 -9 132 13 91 58 c
49 102 29 159 29 228 c
29 297 49 353 91 396 c
132 438 186 460 254 460 c
316 460 367 438 408 396 c
449 354 470 299 470 231 c
380 204 m
380 280 363 339 330 382 c
303 415 271 432 235 432 c
200 432 172 417 151 389 c
129 361 119 322 119 273 c
119 187 136 119 172 68 c
194 34 224 18 262 18 c
298 18 327 34 348 67 c
369 100 380 146 380 204 c
f
Q
} def
/one {
500 0 111 0 394 676 setcachedevice
q
394 0 m
118 0 l
118 15 l
154 17 179 23 193 35 c
206 47 213 67 213 95 c
213 544 l
213 576 203 593 183 593 c
173 593 158 589 138 581 c
111 571 l
111 585 l
290 676 l
299 673 l
299 76 l
299 54 305 38 319 29 c
332 19 357 15 394 15 c
394 0 l
f
Q
} def
/period {
250 0 70 -10 181 100 setcachedevice
q
181 43 m
181 28 175 15 164 5 c
153 -5 140 -10 125 -10 c
109 -10 96 -5 86 5 c
75 15 70 28 70 44 c
70 59 75 72 86 83 c
97 94 110 100 126 100 c
140 100 153 94 164 83 c
175 71 181 58 181 43 c
f
Q
} def
/r {
333 0 5 0 335 460 setcachedevice
q
160 458 m
160 366 l
185 402 206 426 223 440 c
240 453 259 460 280 460 c
297 460 310 455 320 446 c
330 436 335 423 335 407 c
335 393 331 382 324 374 c
317 366 308 362 296 362 c
283 362 270 368 256 382 c
245 392 236 397 230 397 c
216 397 200 387 184 368 c
168 348 160 331 160 315 c
160 90 l
160 61 165 42 177 32 c
188 22 211 16 245 15 c
245 0 l
5 0 l
5 15 l
37 21 56 27 64 35 c
72 42 76 58 76 84 c
76 334 l
76 356 73 371 68 380 c
63 389 54 394 42 394 c
31 394 19 392 7 390 c
7 406 l
49 419 98 437 155 460 c
160 458 l
f
Q
} def
/seven {
500 0 20 -7 449 662 setcachedevice
q
449 646 m
237 -7 l
172 -7 l
370 588 l
155 588 l
126 588 105 583 91 573 c
77 563 59 540 38 506 c
20 515 l
80 662 l
449 662 l
449 646 l
f
Q
} def
/six {
500 0 34 -13 468 684 setcachedevice
q
446 684 m
448 668 l
369 655 303 623 251 572 c
198 521 165 458 152 383 c
190 413 233 428 279 428 c
337 428 383 409 417 372 c
451 334 468 283 468 219 c
468 153 451 100 417 59 c
377 11 324 -13 258 -13 c
176 -13 117 20 81 87 c
49 144 34 208 34 279 c
34 388 70 480 143 555 c
184 597 226 627 270 645 c
314 663 372 676 446 684 c
378 188 m
378 317 333 382 243 382 c
209 382 182 373 160 355 c
138 337 127 308 127 266 c
127 188 139 126 163 81 c
187 36 223 14 269 14 c
304 14 331 29 350 61 c
368 93 378 135 378 188 c
f
Q
} def
/slash {
278 0 -8 -13 287 676 setcachedevice
q
287 676 m
59 -13 l
-8 -13 l
220 676 l
287 676 l
f
Q
} def
/space {
250 0 0 0 0 0 setcachedevice
q
Q
} def
/t {
278 0 13 -9 279 579 setcachedevice
q
266 77 m
279 66 l
247 16 206 -9 158 -9 c
99 -9 70 33 70 117 c
70 418 l
17 418 l
14 420 13 422 13 425 c
13 430 18 436 30 444 c
55 458 87 494 127 551 c
128 553 131 557 136 563 c
141 569 145 575 147 579 c
151 579 154 574 154 566 c
154 450 l
255 450 l
255 418 l
154 418 l
154 132 l
154 100 158 77 166 63 c
174 49 187 42 206 42 c
226 42 246 53 266 77 c
f
Q
} def
/three {
500 0 41 -13 431 676 setcachedevice
q
61 510 m
45 514 l
60 564 84 603 117 632 c
149 661 191 676 241 676 c
287 676 325 663 354 638 c
382 612 397 579 397 539 c
397 484 366 438 304 401 c
340 385 368 367 387 348 c
416 315 431 272 431 219 c
431 165 415 119 385 79 c
362 48 329 25 287 10 c
245 -5 200 -13 153 -13 c
78 -13 41 5 41 43 c
41 53 45 62 53 69 c
61 75 70 79 82 79 c
98 79 119 70 143 53 c
172 32 201 22 229 22 c
265 22 296 36 321 66 c
346 96 359 132 359 175 c
359 251 324 300 255 320 c
234 326 200 330 153 330 c
153 344 l
190 356 218 368 237 380 c
291 410 318 455 318 514 c
318 547 308 572 289 590 c
270 607 244 616 210 616 c
150 616 100 580 61 510 c
f
Q
} def
/two {
500 0 29 0 474 676 setcachedevice
q
474 137 m
420 0 l
29 0 l
29 12 l
207 201 l
253 249 287 294 307 335 c
327 375 337 417 337 461 c
337 505 324 540 300 565 c
275 589 241 602 198 602 c
162 602 133 592 112 574 c
91 555 71 521 51 472 c
30 477 l
41 539 64 587 98 623 c
132 658 179 676 238 676 c
293 676 338 659 372 626 c
406 592 423 550 423 500 c
423 424 380 342 295 252 c
130 76 l
364 76 l
386 76 403 80 416 89 c
429 97 444 115 460 143 c
474 137 l
f
Q
} def
/y {
500 0 14 -217 475 450 setcachedevice
q
475 450 m
475 435 l
463 433 453 429 446 422 c
438 414 431 402 425 384 c
275 -24 l
249 -94 222 -144 196 -173 c
170 -202 138 -217 100 -217 c
78 -217 61 -211 49 -200 c
36 -189 30 -175 30 -159 c
30 -146 34 -135 42 -126 c
50 -117 61 -113 73 -113 c
92 -113 109 -117 125 -126 c
133 -130 142 -133 151 -133 c
165 -133 181 -118 201 -89 c
210 -75 219 -56 228 -32 c
236 -8 241 8 241 18 c
241 26 227 60 199 119 c
67 401 l
58 420 40 432 14 436 c
14 450 l
219 450 l
219 435 l
197 434 182 432 174 428 c
166 424 162 417 162 408 c
162 400 166 387 175 367 c
287 117 l
384 393 l
386 399 388 405 388 411 c
388 427 372 435 342 435 c
342 450 l
475 450 l
f
Q
} def
/zero {
500 0 24 -13 476 676 setcachedevice
q
476 330 m
476 285 471 243 463 203 c
454 163 441 127 424 94 c
407 60 384 34 354 15 c
324 -3 289 -13 250 -13 c
209 -13 173 -3 143 17 c
112 37 88 65 72 100 c
55 134 43 171 35 211 c
27 250 24 292 24 336 c
24 398 31 453 47 503 c
62 553 87 594 123 627 c
159 659 202 676 254 676 c
319 676 372 644 414 580 c
455 516 476 432 476 330 c
380 325 m
380 430 368 510 346 566 c
324 622 291 650 248 650 c
206 650 175 622 153 566 c
131 510 120 431 120 329 c
120 226 131 147 153 93 c
175 39 207 12 250 12 c
292 12 324 39 346 93 c
368 147 380 225 380 325 c
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%BeginResource: font T3_52_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-970 -305 1429 1023] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 1 dict def
CharProcs begin
/e {
444 0 31 -10 412 441 setcachedevice
q
358 109 m
370 97 l
311 25 243 -10 166 -10 c
125 -10 92 2 68 27 c
43 51 31 84 31 126 c
31 204 62 276 124 342 c
186 408 255 441 330 441 c
356 441 376 435 390 423 c
404 411 412 394 412 373 c
412 329 386 289 335 255 c
284 220 215 197 128 186 c
121 172 118 152 118 125 c
118 97 126 75 143 59 c
160 42 183 34 211 34 c
233 34 254 39 274 49 c
294 59 322 79 358 109 c
152 252 m
135 208 l
209 226 263 250 296 282 c
329 314 346 346 346 379 c
346 405 334 418 311 418 c
283 418 253 401 223 369 c
193 337 169 298 152 252 c
f
Q
} def
end
currentdict end
/T3_52_0 exch definefont pop
%%EndResource
/F52_0 /T3_52_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 978.41875 496.201875 re
W
q
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
[] 0 d
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
0 0 978.41875 496.201875 re
f
/DeviceGray {} CS
[0] SC
74.91875 50.621875 405.818182 434.88 re
f
/DeviceGray {} cs
[0] sc
1 j
0.8 w
[] 0 d
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
88.695086 50.621875 m
88.695086 47.121875 l
f
88.695086 50.621875 m
88.695086 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
84.195086 31.325 Td
/F14_0 18 Tf
(0)
[9
0] Tj
0.8 w
182.093978 50.621875 m
182.093978 47.121875 l
f
182.093978 50.621875 m
182.093978 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
168.593978 31.325 Td
/F14_0 18 Tf
(500)
[9
0
9
0
9
0] Tj
0.8 w
275.492869 50.621875 m
275.492869 47.121875 l
f
275.492869 50.621875 m
275.492869 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
257.492869 31.325 Td
/F14_0 18 Tf
(1000)
[9
0
9
0
9
0
9
0] Tj
0.8 w
368.89176 50.621875 m
368.89176 47.121875 l
f
368.89176 50.621875 m
368.89176 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
350.89176 31.325 Td
/F14_0 18 Tf
(1500)
[9
0
9
0
9
0
9
0] Tj
0.8 w
462.290651 50.621875 m
462.290651 47.121875 l
f
462.290651 50.621875 m
462.290651 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
444.290651 31.325 Td
/F14_0 18 Tf
(2000)
[9
0
9
0
9
0
9
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
243.077841 11.121875 Td
/F14_0 18 Tf
(Time [yr])
[10.998
0
5.004
0
14.004
0
7.992
0
4.5
0
5.994
0
9
0
5.994
0
5.994
0] Tj
0.8 w
74.91875 61.625047 m
71.41875 61.625047 l
f
74.91875 61.625047 m
71.41875 61.625047 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
27.41875 55.47661 Td
/F14_0 18 Tf
(0.006)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
74.91875 118.516232 m
71.41875 118.516232 l
f
74.91875 118.516232 m
71.41875 118.516232 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
27.41875 112.367795 Td
/F14_0 18 Tf
(0.008)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
74.91875 175.407417 m
71.41875 175.407417 l
f
74.91875 175.407417 m
71.41875 175.407417 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
27.41875 169.258979 Td
/F14_0 18 Tf
(0.010)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
74.91875 232.298602 m
71.41875 232.298602 l
f
74.91875 232.298602 m
71.41875 232.298602 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
27.41875 226.150164 Td
/F14_0 18 Tf
(0.012)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
74.91875 289.189787 m
71.41875 289.189787 l
f
74.91875 289.189787 m
71.41875 289.189787 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
27.41875 283.041349 Td
/F14_0 18 Tf
(0.014)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
74.91875 346.080971 m
71.41875 346.080971 l
f
74.91875 346.080971 m
71.41875 346.080971 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
27.41875 339.932534 Td
/F14_0 18 Tf
(0.016)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
74.91875 402.972156 m
71.41875 402.972156 l
f
74.91875 402.972156 m
71.41875 402.972156 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
27.41875 396.823719 Td
/F14_0 18 Tf
(0.018)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
74.91875 459.863341 m
71.41875 459.863341 l
f
74.91875 459.863341 m
71.41875 459.863341 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
27.41875 453.714904 Td
/F14_0 18 Tf
(0.020)
[9
0
4.5
0
9
0
9
0
9
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 19.496875 181.061875] Tm
0 0 Td
0 0 Td
/F14_0 18 Tf
(Eccentricity of Oligarch)
[10.998
0
7.992
0
7.992
0
7.992
0
9
0
5.004
0
5.994
0
5.004
0
7.992
0
5.004
0
5.004
0
9
0
4.5
0
9
0
5.994
0
4.5
0
12.996
0
5.004
0
5.004
0
9
0
7.992
0
5.994
0
7.992
0
9
0] Tj
q
74.91875 50.621875 405.818182 434.88 re
W
2 J
1.5 w
/DeviceRGB {} cs
[0 0 0] sc
98.034976 463.307015 m
107.374865 452.822695 l
116.714754 447.588356 l
126.054643 446.83691 l
135.394532 441.521622 l
144.734421 438.570199 l
154.07431 435.169474 l
163.414199 429.976079 l
172.754088 425.270393 l
182.093978 422.85277 l
191.433867 418.936393 l
200.773756 415.783854 l
210.113645 413.419103 l
219.453534 409.161823 l
228.793423 403.487695 l
238.133312 399.516366 l
247.473201 392.469179 l
256.81309 385.473105 l
266.15298 379.856796 l
275.492869 374.178623 l
284.832758 365.893146 l
294.172647 360.198303 l
303.512536 352.631891 l
312.852425 342.735757 l
322.192314 322.188423 l
331.532203 307.302874 l
340.872092 290.611634 l
350.211982 281.829917 l
359.551871 266.713191 l
368.89176 260.541616 l
378.231649 239.672443 l
387.571538 226.792748 l
396.911427 212.364291 l
406.251316 196.546265 l
415.591205 181.960757 l
424.931094 148.279418 l
434.270983 130.906709 l
443.610873 105.842612 l
452.950762 87.604332 l
462.290651 70.389148 l
S
Q
q
74.91875 50.621875 405.818182 434.88 re
W
1.5 w
[5.55 2.4] 0 d
/DeviceRGB {} cs
[0 0 0] sc
93.365031 465.03785 m
98.034976 465.734602 l
102.70492 461.52791 l
107.374865 457.256479 l
112.044809 456.808265 l
116.714754 454.16417 l
121.384698 452.729553 l
126.054643 448.318609 l
130.724587 444.555288 l
135.394532 442.916431 l
140.064477 440.758594 l
144.734421 438.096496 l
149.404366 433.304536 l
154.07431 431.70715 l
158.744255 427.90643 l
163.414199 425.452285 l
168.084144 424.138438 l
172.754088 421.120684 l
177.424033 416.558268 l
182.093978 413.11069 l
186.763922 409.408679 l
191.433867 407.356831 l
196.103811 404.92352 l
200.773756 402.280474 l
205.4437 400.279276 l
210.113645 399.207326 l
214.783589 397.203096 l
219.453534 395.435387 l
224.123479 393.505212 l
228.793423 391.696901 l
233.463368 387.919015 l
238.133312 385.388674 l
242.803257 380.189826 l
247.473201 376.847598 l
252.143146 373.267233 l
256.81309 369.427169 l
261.483035 364.532388 l
266.15298 358.826002 l
270.822924 352.356498 l
275.492869 343.653869 l
280.162813 336.737865 l
284.832758 329.029862 l
289.502702 323.898115 l
294.172647 319.627948 l
298.842591 313.111636 l
303.512536 307.714587 l
308.182481 302.555908 l
312.852425 303.687385 l
317.52237 296.376368 l
322.192314 289.842344 l
326.862259 284.900948 l
331.532203 277.999296 l
336.202148 275.48599 l
340.872092 272.662683 l
345.542037 268.606853 l
350.211982 262.042622 l
354.881926 254.663735 l
359.551871 250.197084 l
364.221815 245.071053 l
368.89176 237.320732 l
373.561704 232.395917 l
378.231649 225.337483 l
382.901593 219.341108 l
387.571538 210.258154 l
392.241483 173.277808 l
396.911427 164.773855 l
401.581372 157.795896 l
406.251316 153.166598 l
410.921261 146.318605 l
415.591205 143.355125 l
420.26115 132.685366 l
424.931094 129.502587 l
429.601039 119.578493 l
434.270983 114.778123 l
438.940928 106.488277 l
443.610873 110.007094 l
448.280817 103.135911 l
452.950762 96.082273 l
457.620706 91.786592 l
462.290651 87.242201 l
S
Q
q
74.91875 50.621875 405.818182 434.88 re
W
1.5 w
[1.5 2.475] 0 d
/DeviceRGB {} cs
[0 0 0] sc
93.365031 464.834659 m
98.034976 459.745126 l
102.70492 455.695018 l
107.374865 453.311014 l
112.044809 453.452144 l
116.714754 451.668189 l
121.384698 445.205097 l
126.054643 441.806023 l
130.724587 439.957551 l
135.394532 438.580597 l
140.064477 434.222397 l
144.734421 431.135996 l
149.404366 428.933313 l
154.07431 427.429072 l
158.744255 424.898522 l
163.414199 421.830288 l
168.084144 421.814185 l
172.754088 418.38085 l
177.424033 415.578917 l
182.093978 411.876864 l
186.763922 409.082001 l
191.433867 406.352944 l
196.103811 403.835126 l
200.773756 401.379001 l
205.4437 396.925325 l
210.113645 394.654174 l
214.783589 391.693209 l
219.453534 387.943698 l
224.123479 386.210309 l
228.793423 381.656022 l
233.463368 378.713313 l
238.133312 374.398782 l
242.803257 368.301236 l
247.473201 361.558122 l
252.143146 356.225809 l
256.81309 350.77955 l
261.483035 346.21406 l
266.15298 339.708798 l
270.822924 335.252732 l
275.492869 330.66598 l
280.162813 327.852724 l
284.832758 325.138653 l
289.502702 321.252135 l
294.172647 320.449945 l
298.842591 315.408165 l
303.512536 313.656776 l
308.182481 309.581222 l
312.852425 307.87429 l
317.52237 298.401969 l
322.192314 292.922624 l
326.862259 286.937954 l
331.532203 283.047245 l
336.202148 282.57521 l
340.872092 272.684374 l
345.542037 265.868685 l
350.211982 254.272337 l
354.881926 243.718556 l
359.551871 235.072327 l
364.221815 226.261638 l
368.89176 213.721609 l
373.561704 184.599806 l
378.231649 178.36203 l
382.901593 167.715243 l
387.571538 159.474994 l
392.241483 152.365552 l
396.911427 143.968332 l
401.581372 147.857705 l
406.251316 145.502299 l
410.921261 140.097925 l
415.591205 131.768527 l
420.26115 132.494865 l
424.931094 126.898156 l
429.601039 119.435588 l
434.270983 113.275008 l
438.940928 107.914846 l
443.610873 102.984504 l
448.280817 94.387171 l
452.950762 86.444486 l
457.620706 82.028304 l
462.290651 80.519126 l
S
Q
q
2 J
0 j
0.8 w
[] 0 d
/DeviceRGB {} cs
[0 0 0] sc
74.91875 50.621875 m
74.91875 485.501875 l
S
480.736932 50.621875 m
480.736932 485.501875 l
S
74.91875 50.621875 m
480.736932 50.621875 l
S
74.91875 485.501875 m
480.736932 485.501875 l
S
0 J
/DeviceGray {} cs
[1] sc
0 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[1] sc
561.900568 50.621875 405.818182 434.88 re
f
/DeviceGray {} cs
[0] sc
1 j
0.8 w
[] 0 d
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
575.676905 50.621875 m
575.676905 47.121875 l
f
575.676905 50.621875 m
575.676905 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
571.176905 31.325 Td
/F14_0 18 Tf
(0)
[9
0] Tj
0.8 w
669.075796 50.621875 m
669.075796 47.121875 l
f
669.075796 50.621875 m
669.075796 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
655.575796 31.325 Td
/F14_0 18 Tf
(500)
[9
0
9
0
9
0] Tj
0.8 w
762.474687 50.621875 m
762.474687 47.121875 l
f
762.474687 50.621875 m
762.474687 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
744.474687 31.325 Td
/F14_0 18 Tf
(1000)
[9
0
9
0
9
0
9
0] Tj
0.8 w
855.873578 50.621875 m
855.873578 47.121875 l
f
855.873578 50.621875 m
855.873578 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
837.873578 31.325 Td
/F14_0 18 Tf
(1500)
[9
0
9
0
9
0
9
0] Tj
0.8 w
949.272469 50.621875 m
949.272469 47.121875 l
f
949.272469 50.621875 m
949.272469 47.121875 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
931.272469 31.325 Td
/F14_0 18 Tf
(2000)
[9
0
9
0
9
0
9
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
730.059659 11.121875 Td
/F14_0 18 Tf
(Time [yr])
[10.998
0
5.004
0
14.004
0
7.992
0
4.5
0
5.994
0
9
0
5.994
0
5.994
0] Tj
0.8 w
561.900568 85.590893 m
558.400568 85.590893 l
f
561.900568 85.590893 m
558.400568 85.590893 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 79.442456 Td
/F14_0 18 Tf
(0.002)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
561.900568 134.24376 m
558.400568 134.24376 l
f
561.900568 134.24376 m
558.400568 134.24376 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 128.095322 Td
/F14_0 18 Tf
(0.003)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
561.900568 182.896626 m
558.400568 182.896626 l
f
561.900568 182.896626 m
558.400568 182.896626 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 176.748189 Td
/F14_0 18 Tf
(0.004)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
561.900568 231.549493 m
558.400568 231.549493 l
f
561.900568 231.549493 m
558.400568 231.549493 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 225.401055 Td
/F14_0 18 Tf
(0.005)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
561.900568 280.202359 m
558.400568 280.202359 l
f
561.900568 280.202359 m
558.400568 280.202359 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 274.053922 Td
/F14_0 18 Tf
(0.006)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
561.900568 328.855226 m
558.400568 328.855226 l
f
561.900568 328.855226 m
558.400568 328.855226 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 322.706788 Td
/F14_0 18 Tf
(0.007)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
561.900568 377.508093 m
558.400568 377.508093 l
f
561.900568 377.508093 m
558.400568 377.508093 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 371.359655 Td
/F14_0 18 Tf
(0.008)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
561.900568 426.160959 m
558.400568 426.160959 l
f
561.900568 426.160959 m
558.400568 426.160959 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 420.012522 Td
/F14_0 18 Tf
(0.009)
[9
0
4.5
0
9
0
9
0
9
0] Tj
0.8 w
561.900568 474.813826 m
558.400568 474.813826 l
f
561.900568 474.813826 m
558.400568 474.813826 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
514.400568 468.665388 Td
/F14_0 18 Tf
(0.010)
[9
0
4.5
0
9
0
9
0
9
0] Tj
q
[0 1 -1 0 506.400568 244.061875] cm
[1 0 0 1 0 0] Tm
0 0 Td
7.199997 0.129687 Td
/F52_0 18 Tf
(e)
[7.992
0] Tj
16.303236 6.479688 Td
/F14_0 12.6 Tf
(2)
[6.3
0] Tj
30.874796 6.479688 Td
(1)
[6.3
0] Tj
37.174796 6.479688 Td
(/)
[3.5028
0] Tj
40.677594 6.479688 Td
(2)
[6.3
0] Tj
q
[0.018 0 0 0.018 0 0.129687] cm
q
[1 0 0 1 0 0] cm
-970 -443 2970 1466 re
W
335 713 m
143 251 l
334 -212 l
282 -212 l
77 241 l
77 261 l
283 713 l
335 713 l
f
Q
Q
q
[0.018 0 0 0.018 23.396986 0.129687] cm
q
[1 0 0 1 0 0] cm
-970 -443 2970 1466 re
W
323 240 m
117 -212 l
65 -212 l
257 250 l
66 713 l
118 713 l
323 260 l
323 240 l
f
Q
Q
Q
Q
q
561.900568 50.621875 405.818182 434.88 re
W
2 J
1.5 w
/DeviceRGB {} cs
[0 0 0] sc
585.016794 106.621932 m
594.356683 140.928055 l
603.696572 166.108472 l
613.036461 182.387144 l
622.37635 194.47204 l
631.716239 205.379495 l
641.056128 219.141612 l
650.396017 231.227185 l
659.735907 242.977807 l
669.075796 254.705135 l
678.415685 260.859479 l
687.755574 274.56994 l
697.095463 280.893169 l
706.435352 292.259273 l
715.775241 294.522685 l
725.11513 299.666145 l
734.455019 303.625378 l
743.794909 306.646996 l
753.134798 310.99527 l
762.474687 316.628086 l
771.814576 320.066772 l
781.154465 324.621817 l
790.494354 330.968062 l
799.834243 336.008542 l
809.174132 341.399498 l
818.514021 346.419885 l
827.853911 354.789736 l
837.1938 373.154205 l
846.533689 377.742765 l
855.873578 388.229348 l
865.213467 390.702684 l
874.553356 393.895335 l
883.893245 396.948999 l
893.233134 399.571961 l
902.573023 403.060246 l
911.912913 416.717809 l
921.252802 424.90856 l
930.592691 426.30787 l
939.93258 435.856099 l
949.272469 442.282593 l
S
Q
q
561.900568 50.621875 405.818182 434.88 re
W
1.5 w
[5.55 2.4] 0 d
/DeviceRGB {} cs
[0 0 0] sc
580.346849 90.468355 m
585.016794 117.271452 l
589.686738 139.483885 l
594.356683 161.718852 l
599.026627 183.21664 l
603.696572 188.999475 l
608.366517 193.505134 l
613.036461 214.745994 l
617.706406 231.309051 l
622.37635 235.32582 l
627.046295 240.357065 l
631.716239 244.391336 l
636.386184 247.700527 l
641.056128 253.014982 l
645.726073 255.418049 l
650.396017 259.67883 l
655.065962 262.57304 l
659.735907 269.769632 l
664.405851 275.503557 l
669.075796 277.981908 l
673.74574 279.475035 l
678.415685 287.705294 l
683.085629 289.48492 l
687.755574 291.020591 l
692.425518 306.605765 l
697.095463 308.556584 l
701.765408 310.26808 l
706.435352 311.953438 l
711.105297 317.547741 l
715.775241 319.775771 l
720.445186 321.038685 l
725.11513 322.71688 l
729.785075 326.901574 l
734.455019 328.431451 l
739.124964 330.550688 l
743.794909 332.958765 l
748.464853 334.51168 l
753.134798 336.277919 l
757.804742 339.876134 l
762.474687 344.172952 l
767.144631 346.716335 l
771.814576 359.567753 l
776.48452 363.577683 l
781.154465 367.315228 l
785.82441 369.260437 l
790.494354 371.478133 l
795.164299 374.208031 l
799.834243 375.410502 l
804.504188 380.575822 l
809.174132 383.926885 l
813.844077 392.287758 l
818.514021 396.488777 l
823.183966 398.325343 l
827.853911 400.057142 l
832.523855 401.221167 l
837.1938 403.416126 l
841.863744 406.449239 l
846.533689 409.589863 l
851.203633 412.936916 l
855.873578 413.989496 l
860.543522 417.142994 l
865.213467 421.80209 l
869.883412 422.766304 l
874.553356 429.904678 l
879.223301 432.223891 l
883.893245 434.284288 l
888.56319 437.4451 l
893.233134 438.621124 l
897.903079 440.112308 l
902.573023 441.178942 l
907.242968 442.712045 l
911.912913 444.64608 l
916.582857 446.419313 l
921.252802 448.123522 l
925.922746 451.822687 l
930.592691 454.335804 l
935.262635 457.044027 l
939.93258 460.951594 l
944.602524 464.654395 l
949.272469 465.734602 l
S
Q
q
561.900568 50.621875 405.818182 434.88 re
W
1.5 w
[1.5 2.475] 0 d
/DeviceRGB {} cs
[0 0 0] sc
580.346849 70.389148 m
585.016794 118.528618 l
589.686738 127.569134 l
594.356683 137.184595 l
599.026627 143.07762 l
603.696572 149.423658 l
608.366517 153.888796 l
613.036461 159.605205 l
617.706406 169.582231 l
622.37635 177.147988 l
627.046295 194.902754 l
631.716239 198.593416 l
636.386184 202.706531 l
641.056128 207.098039 l
645.726073 212.310684 l
650.396017 216.390404 l
655.065962 218.381 l
659.735907 221.781101 l
664.405851 225.074013 l
669.075796 229.348952 l
673.74574 233.247716 l
678.415685 237.350421 l
683.085629 240.558053 l
687.755574 243.545217 l
692.425518 244.953171 l
697.095463 247.356929 l
701.765408 250.974364 l
706.435352 252.899015 l
711.105297 254.793404 l
715.775241 257.327394 l
720.445186 259.403241 l
725.11513 261.20415 l
729.785075 264.307956 l
734.455019 265.949493 l
739.124964 269.973871 l
743.794909 272.547753 l
748.464853 279.499425 l
753.134798 282.738606 l
757.804742 287.945526 l
762.474687 289.596364 l
767.144631 292.22589 l
771.814576 294.965468 l
776.48452 296.528365 l
781.154465 299.093406 l
785.82441 302.778603 l
790.494354 306.09823 l
795.164299 308.947914 l
799.834243 311.53509 l
804.504188 321.541136 l
809.174132 322.960822 l
813.844077 325.857371 l
818.514021 327.280792 l
823.183966 329.48481 l
827.853911 332.730396 l
832.523855 334.555502 l
837.1938 336.088824 l
841.863744 339.973043 l
846.533689 341.078476 l
851.203633 342.054872 l
855.873578 343.140531 l
860.543522 344.404159 l
865.213467 345.898491 l
869.883412 347.105213 l
874.553356 349.371321 l
879.223301 351.424884 l
883.893245 358.236163 l
888.56319 365.997096 l
893.233134 367.732758 l
897.903079 373.13678 l
902.573023 380.91628 l
907.242968 382.227618 l
911.912913 384.067778 l
916.582857 388.938491 l
921.252802 390.447721 l
925.922746 392.823147 l
930.592691 395.159513 l
935.262635 399.006567 l
939.93258 401.267732 l
944.602524 402.377688 l
949.272469 404.715215 l
S
Q
q
2 J
0 j
0.8 w
[] 0 d
/DeviceRGB {} cs
[0 0 0] sc
561.900568 50.621875 m
561.900568 485.501875 l
S
967.71875 50.621875 m
967.71875 485.501875 l
S
561.900568 50.621875 m
967.71875 50.621875 l
S
561.900568 485.501875 m
967.71875 485.501875 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%+ font T3_52_0
%%EOF
